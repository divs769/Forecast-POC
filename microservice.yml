AWSTemplateFormatVersion: '2010-09-09'
Transform: "AWS::Serverless-2016-10-31"
Resources:
  forecastPocApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: Forecast POC backend application
  forecastPocApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref forecastPocApplication
      Description: Forecast POC application version
      SourceBundle:
        S3Bucket: forecast-poc
        S3Key: forecast-poc.jar
  forecastPocConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref forecastPocApplication
      Description: Forecast POC configuration template
      OptionSettings:
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: '1'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: SingleInstance
      SolutionStackName: 64bit Amazon Linux 2017.09 v2.6.6 running Java 8
  forecastPocApplicationEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref forecastPocApplication
      Description: AWS ElasticBeanstalk Forecast POC environment
      TemplateName: !Ref forecastPocConfigurationTemplate
      VersionLabel: !Ref forecastPocApplicationVersion

  HistoricStockLambda:
    Type: "AWS::Serverless::Function"
    Properties:
      Handler: com.shopdirect.StockDataHandler
      Runtime: java8
      CodeUri: "s3://insert-stock-data/insert-stock-data-all.jar"
      FunctionName: "insert-stock-data"
      Events:
        CSVFileUpload:
          Type: S3
          Properties:
            Bucket: !Ref HistoricStockS3
            Events: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  - Name: "suffix"
                    Value: "csv"
      Timeout: 120
      Policies:
        - Version: "2012-10-17"
          Statement:
            Effect: "Allow"
            Action:
              - "s3:GetObject"
            Resource:
              - "arn:aws:s3:::historic-stock-data"
              - "arn:aws:s3:::historic-stock-data/*"
        - Version: "2012-10-17"
          Statement:
            Effect: "Allow"
            Action:
              - "dynamodb:PutItem"
            Resource: !GetAtt HistoricStockDynamoDB.Arn
      Environment:
        Variables:
          BUCKET_NAME: "historic-stock-data"
          TABLE_NAME: "forecast-stock"

  HistoricStockS3:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "historic-stock-data"

  HistoricStockDynamoDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "lineNumber"
          AttributeType: "S"
        - AttributeName: "date"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "lineNumber"
          KeyType: "HASH"
        - AttributeName: "date"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: "forecast-stock"